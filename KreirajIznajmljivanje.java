/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.iznajmljivanje;

import controller.Controller;
import forme.GlavnaForma;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.ResolverStyle;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Bicikla;
import model.Iznajmljivanje;
import model.Kupac;
import model.Prodavac;
import model.StavkaIznajmljivanja;

/**
 *
 * @author HP
 */
public class KreirajIznajmljivanje extends javax.swing.JDialog {

    Prodavac ulogovaniProdavac;
    /**
     * Creates new form KreirajIznajmljivanje
     */
    public KreirajIznajmljivanje(java.awt.Frame parent, boolean modal, Prodavac ulogovaniProdavac) {
        super(parent, modal);
        this.ulogovaniProdavac = ulogovaniProdavac;
        initComponents();
        postaviUlogovanogProdavca();
        this.setTitle("Kreiraj iznajmljivanje");
        popuniComboBoxeve();
        ModelTabeleIznajmljivanje mti = new ModelTabeleIznajmljivanje();
        jTableModeltabeleIznajmljivanje.setModel(mti);
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelUlogovaniProdavac = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonDodajStavku = new javax.swing.JButton();
        jButtonObrisiStavku = new javax.swing.JButton();
        jComboBoxBicikla = new javax.swing.JComboBox<>();
        jLabelCenaPoSatu = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelCenaPoDanu = new javax.swing.JLabel();
        jLabelCenaPoDanu2 = new javax.swing.JLabel();
        jTextFieldPocetnoVreme = new javax.swing.JTextField();
        jTextFieldKrajnjeVreme = new javax.swing.JTextField();
        jLabelBrojDANA = new javax.swing.JLabel();
        jLabelBrojSATI = new javax.swing.JLabel();
        jButtonIzracunajRazliku = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButtonZapamtiIznajmljivanje = new javax.swing.JButton();
        jButtonOdustaniIznajmljivanje1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableModeltabeleIznajmljivanje = new javax.swing.JTable();
        jComboBoxProdavci = new javax.swing.JComboBox<>();
        jComboBoxKupci = new javax.swing.JComboBox<>();
        jLabelUkupanIznos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelUlogovaniProdavac.setText("jLabel2");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("IZNAJMLJIVANJE");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Kupac:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Stavka iznajmljivanja");

        jLabel5.setText("Tip bicikle:");

        jLabel6.setText("Cena po satu:");

        jLabel7.setText("Početno vreme:");

        jLabel8.setText("Krajnje vreme:");

        jLabel9.setText("Broj dana:");

        jButtonDodajStavku.setText("Dodaj stavku");
        jButtonDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajStavkuActionPerformed(evt);
            }
        });

        jButtonObrisiStavku.setText("Obriši stavku");
        jButtonObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiStavkuActionPerformed(evt);
            }
        });

        jComboBoxBicikla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBiciklaActionPerformed(evt);
            }
        });

        jLabel12.setText("Broj sati:");

        jLabelCenaPoDanu.setText("Cena po danu:");

        jTextFieldPocetnoVreme.setText("01.01.2000 01:00");

        jTextFieldKrajnjeVreme.setText("01.01.2000 01:00");

        jButtonIzracunajRazliku.setText("Izračunaj");
        jButtonIzracunajRazliku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzracunajRazlikuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldKrajnjeVreme, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPocetnoVreme, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonDodajStavku)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonObrisiStavku)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonIzracunajRazliku))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelBrojDANA, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addComponent(jLabelBrojSATI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(138, 138, 138))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelCenaPoSatu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxBicikla, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelCenaPoDanu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelCenaPoDanu2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(141, 141, 141))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxBicikla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCenaPoSatu, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabelCenaPoDanu))
                    .addComponent(jLabelCenaPoDanu2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBrojDANA, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)
                        .addComponent(jTextFieldPocetnoVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jTextFieldKrajnjeVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDodajStavku)
                            .addComponent(jButtonObrisiStavku)
                            .addComponent(jButtonIzracunajRazliku))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelBrojSATI, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Prodavac:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Ukupan iznos:");

        jButtonZapamtiIznajmljivanje.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonZapamtiIznajmljivanje.setText("Zapamti");
        jButtonZapamtiIznajmljivanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZapamtiIznajmljivanjeActionPerformed(evt);
            }
        });

        jButtonOdustaniIznajmljivanje1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonOdustaniIznajmljivanje1.setText("Odustani");
        jButtonOdustaniIznajmljivanje1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniIznajmljivanje1ActionPerformed(evt);
            }
        });

        jTableModeltabeleIznajmljivanje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableModeltabeleIznajmljivanje);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelUlogovaniProdavac))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel11)
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabelUkupanIznos, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonZapamtiIznajmljivanje))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel3))
                                                .addGap(20, 20, 20)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBoxProdavci, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jComboBoxKupci, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(54, 54, 54)
                        .addComponent(jButtonOdustaniIznajmljivanje1)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUlogovaniProdavac)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxKupci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBoxProdavci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelUkupanIznos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jButtonZapamtiIznajmljivanje)
                        .addComponent(jButtonOdustaniIznajmljivanje1)))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxBiciklaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBiciklaActionPerformed
        Bicikla izabraniTip = (Bicikla) jComboBoxBicikla.getSelectedItem();
        if (izabraniTip != null) {
            jLabelCenaPoSatu.setText(izabraniTip.getCenaPoSatu() + " RSD");
            jLabelCenaPoDanu2.setText(izabraniTip.getCenaPoDanu() + " RSD");
        } else {
            jLabelCenaPoSatu.setText("Nepoznato.");
            jLabelCenaPoDanu2.setText("Nepoznato.");
        }
    }//GEN-LAST:event_jComboBoxBiciklaActionPerformed

    private void jButtonIzracunajRazlikuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzracunajRazlikuActionPerformed
         try {
            // Korišćenje SimpleDateFormat za parsiranje ulaznih podataka
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd.MM.uuuu HH:mm") .withResolverStyle(ResolverStyle.STRICT);;

            // Proverite da li su oba polja popunjena
            String vremeOd = jTextFieldPocetnoVreme.getText();
            String vremeDo = jTextFieldKrajnjeVreme.getText();

            if (vremeOd.isEmpty() || vremeDo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Molimo unesite oba vremena.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

                // Parsiranje datuma sa vremenom u LocalDateTime
            LocalDateTime pocetak = null;
            LocalDateTime kraj = null;

            // Pokušaj parsiranja početnog vremena
            try {
                pocetak = LocalDateTime.parse(vremeOd, formatter);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Početni datum nije validan. Molimo unesite datum u formatu 'dd.MM.yyyy HH:mm'.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pokušaj parsiranja krajnjeg vremena
            try {
                kraj = LocalDateTime.parse(vremeDo, formatter);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Krajnji datum nije validan. Molimo unesite datum u formatu 'dd.MM.yyyy HH:mm'.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Provera da li je krajnje vreme pre početnog
            if (kraj.isBefore(pocetak)) {
                JOptionPane.showMessageDialog(this, "Krajnje vreme mora biti posle početnog.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Provera da li su datumi u budućnosti
            LocalDateTime sada = LocalDateTime.now();
            if (pocetak.isAfter(sada) || kraj.isAfter(sada)) {
                JOptionPane.showMessageDialog(this, "Datumi ne mogu biti u budućnosti.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Provera da li je krajnje vreme pre početnog
            if (kraj.isBefore(pocetak)) {
                JOptionPane.showMessageDialog(this, "Krajnje vreme mora biti posle početnog.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Računanje razlike u satima
            long brojSati = ChronoUnit.HOURS.between(pocetak, kraj);

            // Računanje kalendarske razlike u danima
            LocalDate pocetakDatum = pocetak.toLocalDate();
            LocalDate krajDatum = kraj.toLocalDate();
            long brojDana = ChronoUnit.DAYS.between(pocetakDatum, krajDatum);

            // Ako su isti dani
            if (pocetakDatum.equals(krajDatum)) {
                if (brojSati <= 4) {
                    jLabelBrojSATI.setText("" + brojSati);
                    jLabelBrojDANA.setText(""+brojDana);
                } else {
                    jLabelBrojSATI.setText("" + brojSati);
                    brojDana = 1;
                    jLabelBrojDANA.setText(""+brojDana);
                }
            } else {
                // Ako su različiti dani
                jLabelBrojSATI.setText("" + brojSati);
                jLabelBrojDANA.setText("" + (brojDana + 1)); // Dodajemo 1 jer je svaki početni dan započet
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unesite vreme u formatu 'dd.MM.yyyy HH:mm'", "Greška", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonIzracunajRazlikuActionPerformed

    private void jButtonDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajStavkuActionPerformed
        try {
        String brojDanaText = jLabelBrojDANA.getText();
        String brojSatiText = jLabelBrojSATI.getText();

        if (brojDanaText == null || brojSatiText == null) {
            JOptionPane.showMessageDialog(this, "Morate prvo izračunati razliku u danima i satima!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int brojSati = Integer.parseInt(brojSatiText);
        int brojDana = Integer.parseInt(brojDanaText);

        Bicikla izabraniTip = (Bicikla) jComboBoxBicikla.getSelectedItem();
        
        if (izabraniTip == null) {
            throw new Exception("Izabrani bicikl je nevalidan.");
        }

        String cenaPoSatu = jLabelCenaPoSatu.getText().split(" ")[0];  
        String cenaPoDanu = jLabelCenaPoDanu2.getText().split(" ")[0];
        
        LocalDateTime vremeOd = LocalDateTime.parse(jTextFieldPocetnoVreme.getText(), DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"));
        LocalDateTime vremeDo = LocalDateTime.parse(jTextFieldKrajnjeVreme.getText(), DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"));

        StavkaIznajmljivanja novaStavka = new StavkaIznajmljivanja(
            izabraniTip, 
            0,  
            0,  
            0,
            vremeOd,
            vremeDo,
            brojSati,
            brojDana,
                null
        );

        ModelTabeleIznajmljivanje model = (ModelTabeleIznajmljivanje) jTableModeltabeleIznajmljivanje.getModel();
        model.dodajStavku(novaStavka); 
        
        double ukupanIznos = model.izracunajUkupanIznos();
        jLabelUkupanIznos.setText(ukupanIznos + " RSD");
        
        jLabelBrojDANA.setText("");
        jLabelBrojSATI.setText("");
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Morate prvo izračunati razliku u danima i satima!", "Greška", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
    }
        
        
        
        
    }//GEN-LAST:event_jButtonDodajStavkuActionPerformed

    private void jButtonOdustaniIznajmljivanje1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniIznajmljivanje1ActionPerformed
        String[] options = {"Da", "Ne"};
        int odgovor = JOptionPane.showOptionDialog(
            this, 
            "Da li ste sigurni da želite da napustite?", 
            "Potvrda", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE, 
            null, 
            options, 
            options[0]
        );
        if (odgovor == JOptionPane.YES_OPTION) {
            GlavnaForma gf = new GlavnaForma(ulogovaniProdavac);
            gf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButtonOdustaniIznajmljivanje1ActionPerformed

    private void jButtonZapamtiIznajmljivanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZapamtiIznajmljivanjeActionPerformed
        
        Kupac izabraniKupac = (Kupac) jComboBoxKupci.getSelectedItem();
        Prodavac izabraniProdavac = (Prodavac) jComboBoxProdavci.getSelectedItem();
        double ukupanIznos = Double.parseDouble(jLabelUkupanIznos.getText().split(" ")[0]);
        Bicikla izabranaBicikla = (Bicikla) jComboBoxBicikla.getSelectedItem();
        System.out.println("\nIZABRANA BICIKLA "+izabranaBicikla+"\n");
        
        if (izabraniKupac == null || izabraniProdavac == null) {
            JOptionPane.showMessageDialog(this, "Molimo izaberite kupca i prodavca.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Iznajmljivanje iznajmljivanje = new Iznajmljivanje();
        iznajmljivanje.setKupac(izabraniKupac);
        iznajmljivanje.setProdavac(izabraniProdavac);
        iznajmljivanje.setUkupanIznos(ukupanIznos);
        
 
        ModelTabeleIznajmljivanje model = (ModelTabeleIznajmljivanje) jTableModeltabeleIznajmljivanje.getModel();
        List<StavkaIznajmljivanja> listaStavki = model.getStavke();
        
        String vremeOdText = jTextFieldPocetnoVreme.getText();
        String vremeDoText = jTextFieldKrajnjeVreme.getText();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");
        LocalDateTime vremeOd = LocalDateTime.parse(vremeOdText, formatter);
        LocalDateTime vremeDo = LocalDateTime.parse(vremeDoText, formatter);
        
        for (StavkaIznajmljivanja stavka : listaStavki) {
            stavka.setVremeOd(vremeOd); // Ako koristiš LocalDateTime
            stavka.setVremeDo(vremeDo);
            stavka.setIznajmljivanje(iznajmljivanje);
            stavka.setBicikla(izabranaBicikla);
        }
        
        iznajmljivanje.setListaStavkiIznajmljivanja(listaStavki);
        
        System.out.println("Podaci o iznajmljivanju pre čuvanja:\n" + iznajmljivanje);
        for (StavkaIznajmljivanja stavka : listaStavki) {
            System.out.println(stavka);
        }
        
        boolean postoji = Controller.getInstance().daLiIznajmljivanjePostoji(iznajmljivanje);
        System.out.println(postoji);
        
        if (postoji) {
            JOptionPane.showMessageDialog(this, "Ovo iznajmljivanje već postoji u bazi.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        boolean rez = Controller.getInstance().sacuvajIznajmljivanjeUBazu(iznajmljivanje);
            if(rez){
            JOptionPane.showMessageDialog(null, "Uspesno ste dodali iznajmljivanje!", "USPEH", JOptionPane.INFORMATION_MESSAGE);
            
            }else{
                JOptionPane.showMessageDialog(null, "Niste dodali iznajmljivanje!", "GRESKA", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_jButtonZapamtiIznajmljivanjeActionPerformed

    private void jButtonObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiStavkuActionPerformed
         int selektovanRed = jTableModeltabeleIznajmljivanje.getSelectedRow();

        if (selektovanRed != -1) {
            // Brišemo red iz modela
            ModelTabeleIznajmljivanje mti = (ModelTabeleIznajmljivanje) jTableModeltabeleIznajmljivanje.getModel();
            mti.obrisi(selektovanRed);

            JOptionPane.showMessageDialog(null, "Stavka je uspešno obrisana iz tabele.");
        } else {
            JOptionPane.showMessageDialog(null, "Molimo vas da izaberete stavku za brisanje.");
        }
    }//GEN-LAST:event_jButtonObrisiStavkuActionPerformed

    /**
     * @param args the command line arguments
     */
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajStavku;
    private javax.swing.JButton jButtonIzracunajRazliku;
    private javax.swing.JButton jButtonObrisiStavku;
    private javax.swing.JButton jButtonOdustaniIznajmljivanje1;
    private javax.swing.JButton jButtonZapamtiIznajmljivanje;
    private javax.swing.JComboBox<Bicikla> jComboBoxBicikla;
    private javax.swing.JComboBox<Kupac> jComboBoxKupci;
    private javax.swing.JComboBox<Prodavac> jComboBoxProdavci;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBrojDANA;
    private javax.swing.JLabel jLabelBrojSATI;
    private javax.swing.JLabel jLabelCenaPoDanu;
    private javax.swing.JLabel jLabelCenaPoDanu2;
    private javax.swing.JLabel jLabelCenaPoSatu;
    private javax.swing.JLabel jLabelUkupanIznos;
    private javax.swing.JLabel jLabelUlogovaniProdavac;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableModeltabeleIznajmljivanje;
    private javax.swing.JTextField jTextFieldKrajnjeVreme;
    private javax.swing.JTextField jTextFieldPocetnoVreme;
    // End of variables declaration//GEN-END:variables

    private void postaviUlogovanogProdavca() {
        String ime = ulogovaniProdavac.getIme() + " " + ulogovaniProdavac.getPrezime();  
        jLabelUlogovaniProdavac.setText("Ulogovani prodavac: " + ime);
    }

    

    private void popuniComboBoxeve() {
       List<Prodavac> sviProdavci = Controller.getInstance().vratiSveProdavceIzBaze();
       for(Prodavac prodavac: sviProdavci){
            jComboBoxProdavci.addItem(prodavac);
       } 
        
       List<Kupac> sviKupci = Controller.getInstance().vratiSveKupceIzBaze();
       for(Kupac kupac: sviKupci){
            jComboBoxKupci.addItem(kupac);
       }
       
       List<Bicikla> sveBicikle = Controller.getInstance().vratiSveBicikleIzBaze();
       for(Bicikla bicikla: sveBicikle){
            jComboBoxBicikla.addItem(bicikla);
       }
    }

    
}
